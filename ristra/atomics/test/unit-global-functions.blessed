apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(0).fetch_add(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::subequal<int>
   T/return : int
   operation: std::atomic<int>(0).fetch_sub(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::andequal<int>
   T/return : int
   operation: std::atomic<int>(0).fetch_and(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::orequal<int>
   T/return : int
   operation: std::atomic<int>(0).fetch_or(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::xorequal<int>
   T/return : int
   operation: std::atomic<int>(0).fetch_xor(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::preincclass
   T/return : int
   operation: ++std::atomic<int>(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::preincclass
   T/return : int
   operation: ++std::atomic<int>(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::postincclass
   T/return : int
   operation: std::atomic<int>(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::predecclass
   T/return : int
   operation: --std::atomic<int>(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::predecclass
   T/return : int
   operation: --std::atomic<int>(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::postdecclass
   T/return : int
   operation: std::atomic<int>(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: std::atomic<int>(0).fetch_add(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: std::atomic<int>(0).fetch_sub(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: std::atomic<int>(0).fetch_and(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: std::atomic<int>(0).fetch_or(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: std::atomic<int>(0).fetch_xor(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::modequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::lshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::rshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::andequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::orequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::xorequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::modequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::lshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::rshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::andequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::orequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::xorequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::modequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::lshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::rshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::andequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::orequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::xorequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::modequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::lshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::rshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::andequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::orequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::xorequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::subequal<int>
   T/return : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::mulequal<int>
   T/return : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::divequal<int>
   T/return : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::modequal<int>
   T/return : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::lshiftequal<int>
   T/return : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::rshiftequal<int>
   T/return : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::andequal<int>
   T/return : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::orequal<int>
   T/return : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::xorequal<int>
   T/return : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::minequal<int>
   T/return : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::preincclass
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::preincclass
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::postincclass
   T/return : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::predecclass
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::predecclass
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::postdecclass
   T/return : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::subequal<int>
   T/return : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::mulequal<int>
   T/return : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::divequal<int>
   T/return : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::modequal<int>
   T/return : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::lshiftequal<int>
   T/return : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::rshiftequal<int>
   T/return : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::andequal<int>
   T/return : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::orequal<int>
   T/return : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::xorequal<int>
   T/return : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::minequal<int>
   T/return : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::preincclass
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::preincclass
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::postincclass
   T/return : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::predecclass
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::predecclass
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::postdecclass
   T/return : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_add(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::subequal<int>
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_sub(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::andequal<int>
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_and(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::orequal<int>
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_or(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::xorequal<int>
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_xor(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::preincclass
   T/return : unsigned long
   operation: ++std::atomic<unsigned long>(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::preincclass
   T/return : unsigned long
   operation: ++std::atomic<unsigned long>(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::postincclass
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::predecclass
   T/return : unsigned long
   operation: --std::atomic<unsigned long>(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::predecclass
   T/return : unsigned long
   operation: --std::atomic<unsigned long>(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::postdecclass
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_add(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_sub(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_and(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_or(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_xor(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::modequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::lshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::rshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::andequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::orequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::xorequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::modequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::lshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::rshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::andequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::orequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::xorequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::modequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::lshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::rshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::andequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::orequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::xorequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::modequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::lshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::rshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::andequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::orequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::xorequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : unsigned long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::subequal<int>
   T/return : unsigned long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::mulequal<int>
   T/return : unsigned long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::divequal<int>
   T/return : unsigned long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::modequal<int>
   T/return : unsigned long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::lshiftequal<int>
   T/return : unsigned long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::rshiftequal<int>
   T/return : unsigned long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::andequal<int>
   T/return : unsigned long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::orequal<int>
   T/return : unsigned long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::xorequal<int>
   T/return : unsigned long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::minequal<int>
   T/return : unsigned long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::preincclass
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::preincclass
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::postincclass
   T/return : unsigned long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::predecclass
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::predecclass
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::postdecclass
   T/return : unsigned long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : unsigned long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::subequal<int>
   T/return : unsigned long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::mulequal<int>
   T/return : unsigned long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::divequal<int>
   T/return : unsigned long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::modequal<int>
   T/return : unsigned long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::lshiftequal<int>
   T/return : unsigned long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::rshiftequal<int>
   T/return : unsigned long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::andequal<int>
   T/return : unsigned long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::orequal<int>
   T/return : unsigned long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::xorequal<int>
   T/return : unsigned long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::minequal<int>
   T/return : unsigned long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::preincclass
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::preincclass
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::postincclass
   T/return : unsigned long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::predecclass
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::predecclass
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::postdecclass
   T/return : unsigned long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : double
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::subequal<int>
   T/return : double
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::mulequal<int>
   T/return : double
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::divequal<int>
   T/return : double
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::minequal<int>
   T/return : double
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::preincclass
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::preincclass
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::postincclass
   T/return : double
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::predecclass
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::predecclass
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::postdecclass
   T/return : double
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : double
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::subequal<int>
   T/return : double
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::mulequal<int>
   T/return : double
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::divequal<int>
   T/return : double
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::minequal<int>
   T/return : double
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::preincclass
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::preincclass
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::postincclass
   T/return : double
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::predecclass
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::predecclass
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::postdecclass
   T/return : double
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) += std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) -= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) *= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) /= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) += std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) -= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) *= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) /= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<std::complex<float> >
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) += std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<std::complex<float> >
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) -= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<std::complex<float> >
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) *= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<std::complex<float> >
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) /= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) += std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) -= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) *= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) /= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) += std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) -= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) *= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) /= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<std::complex<float> >
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) += std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<std::complex<float> >
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) -= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<std::complex<float> >
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) *= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<std::complex<float> >
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) /= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) += std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) -= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) *= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) /= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) += std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) -= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) *= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) /= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<std::complex<float> >
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) += std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<std::complex<float> >
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) -= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<std::complex<float> >
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) *= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<std::complex<float> >
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) /= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) += std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) -= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) *= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) /= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) += std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) -= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) *= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<std::complex<float> >
   sync     : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) /= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<std::complex<float> >
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) += std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<std::complex<float> >
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) -= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<std::complex<float> >
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) *= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<std::complex<float> >
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : std::complex<float>
   P/pun    : long
   operation: std::complex<float>((0,0)) /= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<std::complex<float> >
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) += std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::subequal<std::complex<float> >
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) -= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::mulequal<std::complex<float> >
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) *= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::divequal<std::complex<float> >
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) /= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<std::complex<float> >
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) += std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::subequal<std::complex<float> >
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) -= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::mulequal<std::complex<float> >
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) *= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<std::complex<float>, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::divequal<std::complex<float> >
   T/return : std::complex<float>
   operation: std::complex<float>((0,0)) /= std::complex<float>((1.2,3.4))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) += bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) -= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) *= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) /= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::modequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) %= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::lshiftequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) <<= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::rshiftequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) >>= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::andequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) &= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::orequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) |= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::xorequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) ^= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: mineq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: maxeq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0)++
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0)--
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) += bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) -= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) *= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) /= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::modequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) %= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::lshiftequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) <<= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::rshiftequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) >>= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::andequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) &= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::orequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) |= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::xorequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) ^= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: mineq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: maxeq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0)++
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0)--
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) += bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) -= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) *= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) /= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::modequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) %= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::lshiftequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) <<= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::rshiftequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) >>= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::andequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) &= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::orequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) |= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::xorequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) ^= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: mineq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: maxeq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0)++
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0)--
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) += bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) -= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) *= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) /= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::modequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) %= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::lshiftequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) <<= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::rshiftequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) >>= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::andequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) &= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::orequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) |= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::xorequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) ^= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: mineq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: maxeq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0)++
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0)--
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) += bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) -= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) *= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) /= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::modequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) %= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::lshiftequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) <<= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::rshiftequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) >>= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::andequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) &= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::orequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) |= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::xorequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) ^= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: mineq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: maxeq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0)++
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0)--
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) += bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) -= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) *= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) /= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::modequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) %= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::lshiftequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) <<= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::rshiftequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) >>= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::andequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) &= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::orequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) |= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::xorequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) ^= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: mineq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: maxeq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0)++
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0)--
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) += bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) -= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) *= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) /= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::modequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) %= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::lshiftequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) <<= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::rshiftequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) >>= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::andequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) &= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::orequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) |= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::xorequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) ^= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: mineq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: maxeq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0)++
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0)--
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) += bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) -= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) *= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) /= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::modequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) %= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::lshiftequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) <<= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::rshiftequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) >>= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::andequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) &= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::orequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) |= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::xorequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) ^= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: mineq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   operation: maxeq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0)++
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0)--
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) += bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) -= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) *= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) /= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::modequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) %= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::lshiftequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) <<= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::rshiftequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) >>= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::andequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) &= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::orequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) |= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::xorequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0) ^= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: mineq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: maxeq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0)++
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   operation: foo(0,0,0,0)--
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) += bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) -= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) *= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) /= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::modequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) %= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::lshiftequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) <<= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::rshiftequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) >>= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::andequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) &= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::orequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) |= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::xorequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) ^= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: mineq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: maxeq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0)++
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0)--
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) += bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) -= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) *= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) /= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::modequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) %= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::lshiftequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) <<= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::rshiftequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) >>= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::andequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) &= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::orequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) |= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::xorequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) ^= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: mineq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<bar>
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: maxeq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0)++
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0)--
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) += bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) -= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) *= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) /= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::modequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) %= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::lshiftequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) <<= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::rshiftequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) >>= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::andequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) &= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::orequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) |= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::xorequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0) ^= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: mineq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<bar>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: maxeq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0)++
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : foo
   P/pun    : int
   operation: foo(0,0,0,0)--
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) += bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::subequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) -= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::mulequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) *= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::divequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) /= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::modequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) %= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::lshiftequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) <<= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::rshiftequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) >>= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::andequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) &= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::orequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) |= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::xorequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) ^= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::minequal<bar>
   T/return : foo
   operation: mineq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<bar>
   T/return : foo
   operation: maxeq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::preincclass
   T/return : foo
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::preincclass
   T/return : foo
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::postincclass
   T/return : foo
   operation: foo(0,0,0,0)++
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::predecclass
   T/return : foo
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::predecclass
   T/return : foo
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::postdecclass
   T/return : foo
   operation: foo(0,0,0,0)--
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) += bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::subequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) -= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::mulequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) *= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::divequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) /= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::modequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) %= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::lshiftequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) <<= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::rshiftequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) >>= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::andequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) &= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::orequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) |= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::xorequal<bar>
   T/return : foo
   operation: foo(0,0,0,0) ^= bar(2)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::minequal<bar>
   T/return : foo
   operation: mineq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<bar>
   T/return : foo
   operation: maxeq(foo(0,0,0,0),bar(2))
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::preincclass
   T/return : foo
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::preincclass
   T/return : foo
   operation: ++foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::postincclass
   T/return : foo
   operation: foo(0,0,0,0)++
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::predecclass
   T/return : foo
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::predecclass
   T/return : foo
   operation: --foo(0,0,0,0)
apply
   left side: ristra::atomics::atomic<foo, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::postdecclass
   T/return : foo
   operation: foo(0,0,0,0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(0).fetch_add(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::subequal<int>
   T/return : int
   operation: std::atomic<int>(0).fetch_sub(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::andequal<int>
   T/return : int
   operation: std::atomic<int>(0).fetch_and(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::orequal<int>
   T/return : int
   operation: std::atomic<int>(0).fetch_or(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::xorequal<int>
   T/return : int
   operation: std::atomic<int>(0).fetch_xor(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::preincclass
   T/return : int
   operation: ++std::atomic<int>(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::preincclass
   T/return : int
   operation: ++std::atomic<int>(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::postincclass
   T/return : int
   operation: std::atomic<int>(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::predecclass
   T/return : int
   operation: --std::atomic<int>(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::predecclass
   T/return : int
   operation: --std::atomic<int>(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::postdecclass
   T/return : int
   operation: std::atomic<int>(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: std::atomic<int>(0).fetch_add(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: std::atomic<int>(0).fetch_sub(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: std::atomic<int>(0).fetch_and(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: std::atomic<int>(0).fetch_or(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: std::atomic<int>(0).fetch_xor(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::modequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::lshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::rshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::andequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::orequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::xorequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::modequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::lshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::rshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::andequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::orequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::xorequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::modequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::lshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::rshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::andequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::orequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::xorequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::modequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::lshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::rshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::andequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::orequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::xorequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::subequal<int>
   T/return : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::mulequal<int>
   T/return : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::divequal<int>
   T/return : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::modequal<int>
   T/return : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::lshiftequal<int>
   T/return : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::rshiftequal<int>
   T/return : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::andequal<int>
   T/return : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::orequal<int>
   T/return : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::xorequal<int>
   T/return : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::minequal<int>
   T/return : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::preincclass
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::preincclass
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::postincclass
   T/return : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::predecclass
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::predecclass
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::postdecclass
   T/return : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(0) += int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::subequal<int>
   T/return : int
   operation: int(0) -= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::mulequal<int>
   T/return : int
   operation: int(0) *= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::divequal<int>
   T/return : int
   operation: int(0) /= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::modequal<int>
   T/return : int
   operation: int(0) %= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::lshiftequal<int>
   T/return : int
   operation: int(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::rshiftequal<int>
   T/return : int
   operation: int(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::andequal<int>
   T/return : int
   operation: int(0) &= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::orequal<int>
   T/return : int
   operation: int(0) |= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::xorequal<int>
   T/return : int
   operation: int(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::minequal<int>
   T/return : int
   operation: mineq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(2))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::preincclass
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::preincclass
   T/return : int
   operation: ++int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::postincclass
   T/return : int
   operation: int(0)++
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::predecclass
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::predecclass
   T/return : int
   operation: --int(0)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::postdecclass
   T/return : int
   operation: int(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_add(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::subequal<int>
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_sub(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::andequal<int>
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_and(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::orequal<int>
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_or(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::xorequal<int>
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_xor(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::preincclass
   T/return : unsigned long
   operation: ++std::atomic<unsigned long>(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::preincclass
   T/return : unsigned long
   operation: ++std::atomic<unsigned long>(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::postincclass
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::predecclass
   T/return : unsigned long
   operation: --std::atomic<unsigned long>(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::predecclass
   T/return : unsigned long
   operation: --std::atomic<unsigned long>(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::postdecclass
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_add(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_sub(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_and(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_or(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: std::atomic<unsigned long>(0).fetch_xor(int(2),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::modequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::lshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::rshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::andequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::orequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::xorequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::modequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::lshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::rshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::andequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::orequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::xorequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::modequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::lshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::rshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::andequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::orequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::xorequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::modequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::lshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::rshiftequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::andequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::orequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::xorequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::modequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::lshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::rshiftequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::andequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::orequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::xorequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : unsigned long
   P/pun    : long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : unsigned long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::subequal<int>
   T/return : unsigned long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::mulequal<int>
   T/return : unsigned long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::divequal<int>
   T/return : unsigned long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::modequal<int>
   T/return : unsigned long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::lshiftequal<int>
   T/return : unsigned long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::rshiftequal<int>
   T/return : unsigned long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::andequal<int>
   T/return : unsigned long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::orequal<int>
   T/return : unsigned long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::xorequal<int>
   T/return : unsigned long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::minequal<int>
   T/return : unsigned long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::preincclass
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::preincclass
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::postincclass
   T/return : unsigned long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::predecclass
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::predecclass
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::postdecclass
   T/return : unsigned long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : unsigned long
   operation: unsigned long(0) += int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::subequal<int>
   T/return : unsigned long
   operation: unsigned long(0) -= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::mulequal<int>
   T/return : unsigned long
   operation: unsigned long(0) *= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::divequal<int>
   T/return : unsigned long
   operation: unsigned long(0) /= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::modequal<int>
   T/return : unsigned long
   operation: unsigned long(0) %= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::lshiftequal<int>
   T/return : unsigned long
   operation: unsigned long(0) <<= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::rshiftequal<int>
   T/return : unsigned long
   operation: unsigned long(0) >>= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::andequal<int>
   T/return : unsigned long
   operation: unsigned long(0) &= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::orequal<int>
   T/return : unsigned long
   operation: unsigned long(0) |= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::xorequal<int>
   T/return : unsigned long
   operation: unsigned long(0) ^= int(2)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::minequal<int>
   T/return : unsigned long
   operation: mineq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned long
   operation: maxeq(unsigned long(0),int(2))
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::preincclass
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::preincclass
   T/return : unsigned long
   operation: ++unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::postincclass
   T/return : unsigned long
   operation: unsigned long(0)++
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::predecclass
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::predecclass
   T/return : unsigned long
   operation: --unsigned long(0)
apply
   left side: ristra::atomics::atomic<unsigned long, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::postdecclass
   T/return : unsigned long
   operation: unsigned long(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::subequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::mulequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::divequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::minequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::preincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postincclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::predecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::postdecclass
   success  : memory_order_seq_cst
   failure  : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : double
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::subequal<int>
   T/return : double
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::mulequal<int>
   T/return : double
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::divequal<int>
   T/return : double
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::minequal<int>
   T/return : double
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::preincclass
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::preincclass
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::postincclass
   T/return : double
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::predecclass
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::predecclass
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::postdecclass
   T/return : double
   operation: double(0)--
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : double
   operation: double(0) += int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::subequal<int>
   T/return : double
   operation: double(0) -= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::mulequal<int>
   T/return : double
   operation: double(0) *= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::divequal<int>
   T/return : double
   operation: double(0) /= int(2)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::minequal<int>
   T/return : double
   operation: mineq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(2))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::preincclass
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::preincclass
   T/return : double
   operation: ++double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::postincclass
   T/return : double
   operation: double(0)++
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::predecclass
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::predecclass
   T/return : double
   operation: --double(0)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::postdecclass
   T/return : double
   operation: double(0)--
