apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(1).fetch_add(int(-5),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(-4).fetch_add(int(-5),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(-9).fetch_add(int(-5),memory_order_seq_cst)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(-14).fetch_add(int(-3),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(-17).fetch_add(int(-3),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(-20).fetch_add(int(-3),memory_order_seq_cst)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(-23).fetch_add(int(-1),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(-24).fetch_add(int(-1),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(-25).fetch_add(int(-1),memory_order_seq_cst)
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(-26).fetch_add(int(1),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(-25).fetch_add(int(1),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(-24).fetch_add(int(1),memory_order_seq_cst)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(-23).fetch_add(int(3),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(-20).fetch_add(int(3),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(-17).fetch_add(int(3),memory_order_seq_cst)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(-14).fetch_add(int(5),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(-9).fetch_add(int(5),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: std::atomic<int>(-4).fetch_add(int(5),memory_order_seq_cst)
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_add(&(int(1)),int(-5))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_add(&(int(-4)),int(-5))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_add(&(int(-9)),int(-5))
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_add(&(int(-14)),int(-3))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_add(&(int(-17)),int(-3))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_add(&(int(-20)),int(-3))
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_add(&(int(-23)),int(-1))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_add(&(int(-24)),int(-1))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_add(&(int(-25)),int(-1))
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_add(&(int(-26)),int(1))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_add(&(int(-25)),int(1))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_add(&(int(-24)),int(1))
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_add(&(int(-23)),int(3))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_add(&(int(-20)),int(3))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_add(&(int(-17)),int(3))
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_add(&(int(-14)),int(5))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_add(&(int(-9)),int(5))
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_add(&(int(-4)),int(5))
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(1) += int(-5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-4) += int(-5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-9) += int(-5)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-14) += int(-3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-17) += int(-3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-20) += int(-3)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-23) += int(-1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-24) += int(-1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-25) += int(-1)
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-26) += int(1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-25) += int(1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-24) += int(1)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-23) += int(3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-20) += int(3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-17) += int(3)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-14) += int(5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-9) += int(5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-4) += int(5)
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(1) += int(-5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-4) += int(-5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-9) += int(-5)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-14) += int(-3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-17) += int(-3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-20) += int(-3)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-23) += int(-1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-24) += int(-1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-25) += int(-1)
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-26) += int(1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-25) += int(1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-24) += int(1)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-23) += int(3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-20) += int(3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-17) += int(3)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-14) += int(5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-9) += int(5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-4) += int(5)
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(1) += int(-5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-4) += int(-5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-9) += int(-5)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-14) += int(-3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-17) += int(-3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-20) += int(-3)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-23) += int(-1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-24) += int(-1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-25) += int(-1)
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-26) += int(1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-25) += int(1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-24) += int(1)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-23) += int(3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-20) += int(3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-17) += int(3)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-14) += int(5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-9) += int(5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: int(-4) += int(5)
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(1) += int(-5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-4) += int(-5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-9) += int(-5)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-14) += int(-3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-17) += int(-3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-20) += int(-3)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-23) += int(-1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-24) += int(-1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-25) += int(-1)
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-26) += int(1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-25) += int(1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-24) += int(1)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-23) += int(3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-20) += int(3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-17) += int(3)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-14) += int(5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-9) += int(5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: int(-4) += int(5)
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(1) += int(-5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-4) += int(-5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-9) += int(-5)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-14) += int(-3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-17) += int(-3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-20) += int(-3)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-23) += int(-1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-24) += int(-1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-25) += int(-1)
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-26) += int(1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-25) += int(1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-24) += int(1)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-23) += int(3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-20) += int(3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-17) += int(3)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-14) += int(5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-9) += int(5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-4) += int(5)
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(1) += int(-5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-4) += int(-5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-9) += int(-5)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-14) += int(-3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-17) += int(-3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-20) += int(-3)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-23) += int(-1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-24) += int(-1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-25) += int(-1)
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-26) += int(1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-25) += int(1)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-24) += int(1)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-23) += int(3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-20) += int(3)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-17) += int(3)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-14) += int(5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-9) += int(5)
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<int>
   T/return : int
   operation: int(-4) += int(5)
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: std::atomic<unsigned int>(100).fetch_add(unsigned int(5),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: std::atomic<unsigned int>(105).fetch_add(unsigned int(5),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: std::atomic<unsigned int>(110).fetch_add(unsigned int(5),memory_order_seq_cst)
value == 115
atom  == 115
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: std::atomic<unsigned int>(115).fetch_add(unsigned int(7),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: std::atomic<unsigned int>(122).fetch_add(unsigned int(7),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: std::atomic<unsigned int>(129).fetch_add(unsigned int(7),memory_order_seq_cst)
value == 136
atom  == 136
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: std::atomic<unsigned int>(136).fetch_add(unsigned int(9),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: std::atomic<unsigned int>(145).fetch_add(unsigned int(9),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: std::atomic<unsigned int>(154).fetch_add(unsigned int(9),memory_order_seq_cst)
value == 163
atom  == 163
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: std::atomic<unsigned int>(163).fetch_add(unsigned int(11),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: std::atomic<unsigned int>(174).fetch_add(unsigned int(11),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: std::atomic<unsigned int>(185).fetch_add(unsigned int(11),memory_order_seq_cst)
value == 196
atom  == 196
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: std::atomic<unsigned int>(196).fetch_add(unsigned int(13),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: std::atomic<unsigned int>(209).fetch_add(unsigned int(13),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: std::atomic<unsigned int>(222).fetch_add(unsigned int(13),memory_order_seq_cst)
value == 235
atom  == 235
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: std::atomic<unsigned int>(235).fetch_add(unsigned int(15),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: std::atomic<unsigned int>(250).fetch_add(unsigned int(15),memory_order_seq_cst)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::cpp, 0ul>
   scheme   : cpp
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: std::atomic<unsigned int>(265).fetch_add(unsigned int(15),memory_order_seq_cst)
value == 280
atom  == 280
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_add(&(unsigned int(100)),unsigned int(5))
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_add(&(unsigned int(105)),unsigned int(5))
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_add(&(unsigned int(110)),unsigned int(5))
value == 115
atom  == 115
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_add(&(unsigned int(115)),unsigned int(7))
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_add(&(unsigned int(122)),unsigned int(7))
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_add(&(unsigned int(129)),unsigned int(7))
value == 136
atom  == 136
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_add(&(unsigned int(136)),unsigned int(9))
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_add(&(unsigned int(145)),unsigned int(9))
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_add(&(unsigned int(154)),unsigned int(9))
value == 163
atom  == 163
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_add(&(unsigned int(163)),unsigned int(11))
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_add(&(unsigned int(174)),unsigned int(11))
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_add(&(unsigned int(185)),unsigned int(11))
value == 196
atom  == 196
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_add(&(unsigned int(196)),unsigned int(13))
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_add(&(unsigned int(209)),unsigned int(13))
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_add(&(unsigned int(222)),unsigned int(13))
value == 235
atom  == 235
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_add(&(unsigned int(235)),unsigned int(15))
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_add(&(unsigned int(250)),unsigned int(15))
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_add(&(unsigned int(265)),unsigned int(15))
value == 280
atom  == 280
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(100) += unsigned int(5)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(105) += unsigned int(5)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(110) += unsigned int(5)
value == 115
atom  == 115
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(115) += unsigned int(7)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(122) += unsigned int(7)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(129) += unsigned int(7)
value == 136
atom  == 136
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(136) += unsigned int(9)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(145) += unsigned int(9)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(154) += unsigned int(9)
value == 163
atom  == 163
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(163) += unsigned int(11)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(174) += unsigned int(11)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(185) += unsigned int(11)
value == 196
atom  == 196
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(196) += unsigned int(13)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(209) += unsigned int(13)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(222) += unsigned int(13)
value == 235
atom  == 235
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(235) += unsigned int(15)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(250) += unsigned int(15)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(265) += unsigned int(15)
value == 280
atom  == 280
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(100) += unsigned int(5)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(105) += unsigned int(5)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(110) += unsigned int(5)
value == 115
atom  == 115
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(115) += unsigned int(7)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(122) += unsigned int(7)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(129) += unsigned int(7)
value == 136
atom  == 136
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(136) += unsigned int(9)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(145) += unsigned int(9)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(154) += unsigned int(9)
value == 163
atom  == 163
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(163) += unsigned int(11)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(174) += unsigned int(11)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(185) += unsigned int(11)
value == 196
atom  == 196
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(196) += unsigned int(13)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(209) += unsigned int(13)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(222) += unsigned int(13)
value == 235
atom  == 235
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(235) += unsigned int(15)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(250) += unsigned int(15)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(265) += unsigned int(15)
value == 280
atom  == 280
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(100) += unsigned int(5)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(105) += unsigned int(5)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(110) += unsigned int(5)
value == 115
atom  == 115
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(115) += unsigned int(7)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(122) += unsigned int(7)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(129) += unsigned int(7)
value == 136
atom  == 136
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(136) += unsigned int(9)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(145) += unsigned int(9)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(154) += unsigned int(9)
value == 163
atom  == 163
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(163) += unsigned int(11)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(174) += unsigned int(11)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(185) += unsigned int(11)
value == 196
atom  == 196
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(196) += unsigned int(13)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(209) += unsigned int(13)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(222) += unsigned int(13)
value == 235
atom  == 235
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(235) += unsigned int(15)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(250) += unsigned int(15)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: unsigned int(265) += unsigned int(15)
value == 280
atom  == 280
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(100) += unsigned int(5)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(105) += unsigned int(5)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(110) += unsigned int(5)
value == 115
atom  == 115
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(115) += unsigned int(7)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(122) += unsigned int(7)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(129) += unsigned int(7)
value == 136
atom  == 136
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(136) += unsigned int(9)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(145) += unsigned int(9)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(154) += unsigned int(9)
value == 163
atom  == 163
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(163) += unsigned int(11)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(174) += unsigned int(11)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(185) += unsigned int(11)
value == 196
atom  == 196
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(196) += unsigned int(13)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(209) += unsigned int(13)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(222) += unsigned int(13)
value == 235
atom  == 235
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(235) += unsigned int(15)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(250) += unsigned int(15)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<unsigned int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: unsigned int(265) += unsigned int(15)
value == 280
atom  == 280
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(100) += unsigned int(5)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(105) += unsigned int(5)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(110) += unsigned int(5)
value == 115
atom  == 115
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(115) += unsigned int(7)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(122) += unsigned int(7)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(129) += unsigned int(7)
value == 136
atom  == 136
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(136) += unsigned int(9)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(145) += unsigned int(9)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(154) += unsigned int(9)
value == 163
atom  == 163
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(163) += unsigned int(11)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(174) += unsigned int(11)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(185) += unsigned int(11)
value == 196
atom  == 196
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(196) += unsigned int(13)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(209) += unsigned int(13)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(222) += unsigned int(13)
value == 235
atom  == 235
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(235) += unsigned int(15)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(250) += unsigned int(15)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(265) += unsigned int(15)
value == 280
atom  == 280
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(100) += unsigned int(5)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(105) += unsigned int(5)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(110) += unsigned int(5)
value == 115
atom  == 115
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(115) += unsigned int(7)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(122) += unsigned int(7)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(129) += unsigned int(7)
value == 136
atom  == 136
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(136) += unsigned int(9)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(145) += unsigned int(9)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(154) += unsigned int(9)
value == 163
atom  == 163
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(163) += unsigned int(11)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(174) += unsigned int(11)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(185) += unsigned int(11)
value == 196
atom  == 196
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(196) += unsigned int(13)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(209) += unsigned int(13)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(222) += unsigned int(13)
value == 235
atom  == 235
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(235) += unsigned int(15)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(250) += unsigned int(15)
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<unsigned int>
   T/return : unsigned int
   operation: unsigned int(265) += unsigned int(15)
value == 280
atom  == 280
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(1) += float(-5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-4) += float(-5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-9) += float(-5)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-14) += float(-3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-17) += float(-3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-20) += float(-3)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-23) += float(-1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-24) += float(-1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-25) += float(-1)
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-26) += float(1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-25) += float(1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-24) += float(1)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-23) += float(3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-20) += float(3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-17) += float(3)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-14) += float(5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-9) += float(5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-4) += float(5)
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(1) += float(-5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-4) += float(-5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-9) += float(-5)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-14) += float(-3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-17) += float(-3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-20) += float(-3)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-23) += float(-1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-24) += float(-1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-25) += float(-1)
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-26) += float(1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-25) += float(1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-24) += float(1)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-23) += float(3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-20) += float(3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-17) += float(3)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-14) += float(5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-9) += float(5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-4) += float(5)
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(1) += float(-5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-4) += float(-5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-9) += float(-5)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-14) += float(-3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-17) += float(-3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-20) += float(-3)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-23) += float(-1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-24) += float(-1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-25) += float(-1)
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-26) += float(1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-25) += float(1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-24) += float(1)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-23) += float(3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-20) += float(3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-17) += float(3)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-14) += float(5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-9) += float(5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   operation: float(-4) += float(5)
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(1) += float(-5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-4) += float(-5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-9) += float(-5)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-14) += float(-3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-17) += float(-3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-20) += float(-3)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-23) += float(-1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-24) += float(-1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-25) += float(-1)
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-26) += float(1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-25) += float(1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-24) += float(1)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-23) += float(3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-20) += float(3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-17) += float(3)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-14) += float(5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-9) += float(5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<float>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: float(-4) += float(5)
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(1) += float(-5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-4) += float(-5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-9) += float(-5)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-14) += float(-3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-17) += float(-3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-20) += float(-3)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-23) += float(-1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-24) += float(-1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-25) += float(-1)
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-26) += float(1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-25) += float(1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-24) += float(1)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-23) += float(3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-20) += float(3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-17) += float(3)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-14) += float(5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-9) += float(5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-4) += float(5)
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(1) += float(-5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-4) += float(-5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-9) += float(-5)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-14) += float(-3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-17) += float(-3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-20) += float(-3)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-23) += float(-1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-24) += float(-1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-25) += float(-1)
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-26) += float(1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-25) += float(1)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-24) += float(1)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-23) += float(3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-20) += float(3)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-17) += float(3)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-14) += float(5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-9) += float(5)
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<float>
   T/return : float
   operation: float(-4) += float(5)
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: Kokkos::atomic_fetch_add(&(double(1)),double(-5))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: Kokkos::atomic_fetch_add(&(double(-4)),double(-5))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: Kokkos::atomic_fetch_add(&(double(-9)),double(-5))
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: Kokkos::atomic_fetch_add(&(double(-14)),double(-3))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: Kokkos::atomic_fetch_add(&(double(-17)),double(-3))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: Kokkos::atomic_fetch_add(&(double(-20)),double(-3))
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: Kokkos::atomic_fetch_add(&(double(-23)),double(-1))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: Kokkos::atomic_fetch_add(&(double(-24)),double(-1))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: Kokkos::atomic_fetch_add(&(double(-25)),double(-1))
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: Kokkos::atomic_fetch_add(&(double(-26)),double(1))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: Kokkos::atomic_fetch_add(&(double(-25)),double(1))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: Kokkos::atomic_fetch_add(&(double(-24)),double(1))
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: Kokkos::atomic_fetch_add(&(double(-23)),double(3))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: Kokkos::atomic_fetch_add(&(double(-20)),double(3))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: Kokkos::atomic_fetch_add(&(double(-17)),double(3))
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: Kokkos::atomic_fetch_add(&(double(-14)),double(5))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: Kokkos::atomic_fetch_add(&(double(-9)),double(5))
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: Kokkos::atomic_fetch_add(&(double(-4)),double(5))
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(1) += double(-5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-4) += double(-5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-9) += double(-5)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-14) += double(-3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-17) += double(-3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-20) += double(-3)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-23) += double(-1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-24) += double(-1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-25) += double(-1)
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-26) += double(1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-25) += double(1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-24) += double(1)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-23) += double(3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-20) += double(3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-17) += double(3)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-14) += double(5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-9) += double(5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-4) += double(5)
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(1) += double(-5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-4) += double(-5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-9) += double(-5)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-14) += double(-3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-17) += double(-3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-20) += double(-3)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-23) += double(-1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-24) += double(-1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-25) += double(-1)
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-26) += double(1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-25) += double(1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-24) += double(1)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-23) += double(3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-20) += double(3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-17) += double(3)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-14) += double(5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-9) += double(5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-4) += double(5)
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(1) += double(-5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-4) += double(-5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-9) += double(-5)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-14) += double(-3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-17) += double(-3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-20) += double(-3)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-23) += double(-1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-24) += double(-1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-25) += double(-1)
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-26) += double(1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-25) += double(1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-24) += double(1)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-23) += double(3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-20) += double(3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-17) += double(3)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-14) += double(5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-9) += double(5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   operation: double(-4) += double(5)
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(1) += double(-5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-4) += double(-5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-9) += double(-5)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-14) += double(-3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-17) += double(-3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-20) += double(-3)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-23) += double(-1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-24) += double(-1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-25) += double(-1)
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-26) += double(1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-25) += double(1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-24) += double(1)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-23) += double(3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-20) += double(3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-17) += double(3)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-14) += double(5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-9) += double(5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::addequal<double>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: double(-4) += double(5)
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(1) += double(-5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-4) += double(-5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-9) += double(-5)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-14) += double(-3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-17) += double(-3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-20) += double(-3)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-23) += double(-1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-24) += double(-1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-25) += double(-1)
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-26) += double(1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-25) += double(1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-24) += double(1)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-23) += double(3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-20) += double(3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-17) += double(3)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-14) += double(5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-9) += double(5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-4) += double(5)
value == 1
atom  == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(1) += double(-5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-4) += double(-5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-9) += double(-5)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-14) += double(-3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-17) += double(-3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-20) += double(-3)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-23) += double(-1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-24) += double(-1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-25) += double(-1)
value == -26
atom  == -26
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-26) += double(1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-25) += double(1)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-24) += double(1)
value == -23
atom  == -23
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-23) += double(3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-20) += double(3)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-17) += double(3)
value == -14
atom  == -14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-14) += double(5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-9) += double(5)
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::addequal<double>
   T/return : double
   operation: double(-4) += double(5)
value == 1
atom  == 1
