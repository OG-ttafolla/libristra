apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(1)),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(1)),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(1)),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(1)),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(1)),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(1)),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(1)),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(1)),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(1)),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(1)),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(1)),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(2)),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(2)),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(2)),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(2)),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(2)),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(2)),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(2)),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(2)),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(2)),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(2)),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(2)),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(3)),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(3)),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(3)),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(3)),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(3)),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(3)),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(3)),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(3)),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(3)),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(3)),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(3)),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(4)),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(4)),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(4)),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(4)),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(4)),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(4)),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(4)),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(4)),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(4)),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(4)),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(4)),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(5)),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(5)),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(5)),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(5)),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(5)),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(5)),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(5)),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(5)),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(5)),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(5)),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(5)),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(6)),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(6)),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(6)),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(6)),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(6)),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(6)),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(6)),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(6)),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(6)),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(6)),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(6)),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(7)),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(7)),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(7)),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(7)),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(7)),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(7)),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(7)),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(7)),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(7)),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(7)),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(7)),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(8)),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(8)),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(8)),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(8)),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(8)),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(8)),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(8)),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(8)),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(8)),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(8)),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(8)),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(9)),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(9)),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(9)),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(9)),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(9)),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(9)),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(9)),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(9)),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(9)),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(9)),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(9)),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(10)),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(10)),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(10)),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(10)),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(10)),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(10)),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(10)),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(10)),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(10)),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(10)),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: Kokkos::atomic_fetch_max(&(int(10)),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   operation: maxeq(int(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : int
   P/pun    : int
   operation: maxeq(int(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : int
   operation: maxeq(int(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(1)),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(1)),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(1)),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(1)),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(1)),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(1)),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(1)),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(1)),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(1)),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(1)),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(1)),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(2)),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(2)),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(2)),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(2)),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(2)),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(2)),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(2)),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(2)),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(2)),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(2)),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(2)),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(3)),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(3)),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(3)),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(3)),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(3)),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(3)),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(3)),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(3)),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(3)),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(3)),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(3)),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(4)),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(4)),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(4)),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(4)),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(4)),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(4)),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(4)),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(4)),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(4)),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(4)),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(4)),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(5)),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(5)),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(5)),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(5)),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(5)),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(5)),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(5)),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(5)),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(5)),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(5)),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(5)),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(6)),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(6)),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(6)),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(6)),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(6)),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(6)),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(6)),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(6)),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(6)),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(6)),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(6)),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(7)),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(7)),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(7)),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(7)),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(7)),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(7)),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(7)),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(7)),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(7)),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(7)),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(7)),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(8)),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(8)),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(8)),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(8)),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(8)),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(8)),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(8)),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(8)),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(8)),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(8)),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(8)),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(9)),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(9)),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(9)),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(9)),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(9)),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(9)),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(9)),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(9)),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(9)),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(9)),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(9)),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(10)),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(10)),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(10)),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(10)),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(10)),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(10)),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(10)),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(10)),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(10)),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(10)),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: Kokkos::atomic_fetch_max(&(unsigned int(10)),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : unsigned int
   P/pun    : int
   operation: maxeq(unsigned int(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<unsigned int, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : unsigned int
   operation: maxeq(unsigned int(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   operation: maxeq(float(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : float
   P/pun    : int
   operation: maxeq(float(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<float, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : float
   operation: maxeq(float(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(0)),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(1)),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(1)),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(1)),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(1)),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(1)),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(1)),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(1)),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(1)),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(1)),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(1)),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(1)),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(2)),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(2)),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(2)),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(2)),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(2)),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(2)),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(2)),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(2)),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(2)),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(2)),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(2)),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(3)),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(3)),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(3)),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(3)),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(3)),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(3)),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(3)),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(3)),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(3)),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(3)),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(3)),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(4)),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(4)),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(4)),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(4)),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(4)),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(4)),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(4)),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(4)),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(4)),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(4)),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(4)),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(5)),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(5)),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(5)),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(5)),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(5)),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(5)),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(5)),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(5)),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(5)),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(5)),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(5)),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(6)),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(6)),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(6)),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(6)),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(6)),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(6)),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(6)),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(6)),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(6)),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(6)),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(6)),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(7)),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(7)),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(7)),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(7)),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(7)),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(7)),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(7)),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(7)),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(7)),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(7)),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(7)),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(8)),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(8)),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(8)),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(8)),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(8)),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(8)),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(8)),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(8)),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(8)),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(8)),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(8)),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(9)),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(9)),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(9)),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(9)),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(9)),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(9)),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(9)),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(9)),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(9)),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(9)),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(9)),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(10)),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(10)),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(10)),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(10)),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(10)),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(10)),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(10)),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(10)),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(10)),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(10)),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::kokkos, 0ul>
   scheme   : kokkos
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: Kokkos::atomic_fetch_max(&(double(10)),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong, 0ul>
   scheme   : strong
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::strong::pun, 0ul>
   scheme   : strong::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak, 0ul>
   scheme   : weak
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   operation: maxeq(double(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::weak::pun, 0ul>
   scheme   : weak::pun
   function : ristra::atomics::internal::maxequal<int>
   sync     : memory_order_seq_cst
   T/return : double
   P/pun    : long
   operation: maxeq(double(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::lock, 0ul>
   scheme   : lock
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(100))
value == 100
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(0),int(0))
value == 0
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(0))
value == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(1))
value == 1
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(1),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(0))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(2))
value == 2
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(2),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(0))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(3))
value == 3
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(3),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(0))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(4))
value == 4
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(4),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(0))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(5))
value == 5
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(15))
value == 15
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(25))
value == 25
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(5),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(0))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(6))
value == 6
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(12))
value == 12
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(6),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(0))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(7))
value == 7
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(14))
value == 14
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(21))
value == 21
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(28))
value == 28
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(35))
value == 35
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(42))
value == 42
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(49))
value == 49
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(7),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(0))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(8))
value == 8
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(16))
value == 16
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(24))
value == 24
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(32))
value == 32
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(48))
value == 48
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(56))
value == 56
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(64))
value == 64
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(8),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(0))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(9))
value == 9
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(18))
value == 18
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(27))
value == 27
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(36))
value == 36
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(45))
value == 45
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(54))
value == 54
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(63))
value == 63
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(72))
value == 72
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(81))
value == 81
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(9),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(0))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(10))
value == 10
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(20))
value == 20
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(30))
value == 30
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(40))
value == 40
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(50))
value == 50
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(60))
value == 60
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(70))
value == 70
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(80))
value == 80
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(90))
value == 90
apply
   left side: ristra::atomics::atomic<double, ristra::atomics::serial, 0ul>
   scheme   : serial
   function : ristra::atomics::internal::maxequal<int>
   T/return : double
   operation: maxeq(double(10),int(100))
value == 100
